TODOs
=====

Some rectangles are not drawn correctly
---------------------------------------

Problem:

When we tried to extract all semantic rectangles from PDF supplied by our
typesetter, we noticed that some rectangles are not drawn (i.e., they are
not included in the XML output stream).

Analysis:

We first assumed that it had something to do with colors (or hidden colors) as
our typesetter added elements that were supposed not to interfere with the layout.

But it turned out to be a bug in PDFMiner:

In ``converter.py``, line 81 (``paint_path``) a join of all path elements in the
current path (``self.curpath``) is executed. This results in a sequence of letters,
which can be interpreted to give the desired shape ('mlllh' for rectangle, 'ml' for
horizontal/vertical line). If no shape can be detected, each pair of coordinates is
dealt with directly, resulting in a ``LTCurve``. Yet, if there are two or more
rectangle coordinates in the current path, several ``LTRect``s should be detected
and rendered.

Solution:

There are basically two solutions:

(1) Modify ``paint_path`` so that it renders correct shapes (preferred solution).

(2) Modify ``paint_path`` so that it adds the current colorant to the ``LTCurve``
and then post-process the XML to change the curve into a ``rect`` tag. 

Solution no. 2 was implemented.

Bugfix: spaces after combining chars
------------------------------------
- Überschüssiges Leerzeichen nach combining character (im Wortinnern!), cf. BSB 2276, 2267, 2271, 2272, 2273
	>> weniger dramatisch, aber ähnlich gelagert: zwischen römischen Zahlen und hochgestellten Anm.ziffern; vgl. 2271, 2272

Extraction fix: Spaced text
----------------------------
BSB 2265 (bibliography) etc.


Bugfix PDFminer: glyphnames
---------------------------

Glyphnames sind nach Erstellung der xml oftmals falsch/verschoben:
1) Versuch mit QQ zur Geistesgesch. 20: Gegenüber Elementwert verschoben um eine Position im Alphabet
2) Versuch mit Digitalisierungs-Export (Erlkönig 8): Im Lesefluss um ein Zeichen verrutscht


Bugfix PDFminer: whitex
-----------------------

Das "whitex"-Problem (Extraktion von weißem/transparentem Text) besteht auch nach der Anpassung von anapdf/PDFminer weiterhin. 
Zitat aus dem ph zu BSB 2243 = koelzer_2016_2_bsb_2243:

"
Scan 000007 = S. 577 und Scan 00211 = S. 781 gibt es jw. ein "blindes" (und funktionsloses) "M", das auch die revidierte anapdf nicht beseitigt hat. 
>> Vgl. die index.htm bei "TimesNewRomanPSMT", CID 77 und in der .xml die Zeile "<text font="LJSUYH+TimesNewRomanPSMT" bbox="67.921,698.491,79.478,715.573" size="17.082" cid="77" rise="0" origin="67.921,702.482" msize="13.0" glyphname="M">M</text>"
>> Vgl. die index.htm bei "TimesNewRomanPS-BoldMT", CID 77 und in der .xml die Zeile "<text font="LJSUYH+TimesNewRomanPSMT" bbox="59.527,700.992,68.862,714.789" size="13.797" cid="77" rise="0" origin="59.527,704.216" msize="10.5" glyphname="M">M</text>"
"


Bugfix PDFminer
---------------

- OK Problem: Extraktion römisch gezählter Seiten, die im PDF um ein Kleinbuchstabensuffix ergänzt, sind schlägt fehl.

  Beispiel: BSB 66298 (MGH Fontes iuris N. S. 8,1), wo auf S. "XLVIII" (Scan 00048) der Abbildungsteil folgt: "XLVIIIa" - "XLVIIIh".

  Traceback: 

  Traceback (most recent call last):
    File "C:\ProgramData\Anaconda3\Scripts\anapdf-script.py", line 33, in <module>
      sys.exit(load_entry_point('anapdf', 'console_scripts', 'anapdf')())
    File "c:\users\andreas öffner\git\anapdf\src\anapdf\scripts\anapdf_script.py", line 108, in main
      a.analyze()
    File "c:\users\andreas öffner\git\anapdf\src\anapdf\analyzer.py", line 105, in analyze
      self.get_xml_data()
    File "c:\users\andreas öffner\git\anapdf\src\anapdf\analyzer.py", line 412, in get_xml_data
      for page in PDFPage.get_pages(
    File "c:\users\andreas öffner\git\pdfminer\pdfminer\pdfpage.py", line 195, in get_pages
      for (pageno, page) in enumerate(klass.create_pages(doc)):
    File "c:\users\andreas öffner\git\pdfminer\pdfminer\pdfpage.py", line 165, in create_pages
      label = get_label(fullnumtree, cnt)
    File "c:\users\andreas öffner\git\pdfminer\pdfminer\pdfpage.py", line 124, in get_label
      value = (((num - 1)/26 + 1)*
  TypeError: can't multiply sequence by non-int of type 'float'